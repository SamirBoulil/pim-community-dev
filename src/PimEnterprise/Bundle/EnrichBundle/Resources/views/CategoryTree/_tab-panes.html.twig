{% if form.vars.value.id %}
<script type="text/javascript">
    require(
        ['jquery', 'underscore', 'jquery.select2'],
        function ($, _) {
            'use strict';

            {% if form.vars.value.hasChildren() == false %}
            $(function () {
                $('#{{form.permissions.apply_on_children.vars.id}}').parent().parent().hide();
            });
            {% endif %}

            var updateWhenAdd = {
                'pim_category_permissions_view': [],
                'pim_category_permissions_edit': ['pim_category_permissions_view'],
                'pim_category_permissions_own': ['pim_category_permissions_edit'],
            };
            var updateWhenRemove = {
                'pim_category_permissions_view': ['pim_category_permissions_edit'],
                'pim_category_permissions_edit': ['pim_category_permissions_own'],
                'pim_category_permissions_own': [],
            };

            $(function () {
                $('#{{form.permissions.vars.id}}').append('<div class="control-group"><label class="control-label">{{ 'Changes'|trans }}</label><div class="controls"><ul id="permissions-changes"></ul></div></div>');
                $('#permissions-changes').parent().parent().children('label').hide();

                $('#{{form.permissions.vars.id}} select')
                    .select2()
                    .on('change', function(e) {

                        var permission = $(this).attr('id');
                        var permissionLabel = $.trim($(this).parents('.control-group').children('label').text()).toLowerCase();

                        if (typeof e.added !== 'undefined') {
                            if ($('#change-'+permission+'-'+e.added.id).length > 0) {
                                $('#change-'+permission+'-'+e.added.id).remove();
                            } else {
                                $('#permissions-changes').append("<li id='change-"+permission+'-'+e.added.id+"'>"
                                    +_.__('permissions-changes.grant-{{"{{ permission }}"}}-to-{{"{{ group }}"}}', {'permission': permissionLabel, 'group':e.added.text})+"</li>");
                            }

                            var idsToUpdate = updateWhenAdd[e.target.id];
                            $(idsToUpdate).each(function(index, selectId) {
                                var toUpdate = $('#'+selectId);
                                if ($.inArray(e.added.id, toUpdate.val()) === -1) {
                                    var propagateEvent = $.Event("change");
                                    propagateEvent.added = e.added;
                                    var values = (toUpdate.val() === null) ? [e.added.id] : $.merge(toUpdate.val(), e.added.id);
                                    toUpdate.val(values).trigger(propagateEvent);
                                }
                            });
                        }

                        if (typeof e.removed !== 'undefined') {
                            if ($('#change-'+permission+'-'+e.removed.id).length > 0) {
                                $('#change-'+permission+'-'+e.removed.id).remove();
                            } else {
                                $('#permissions-changes').append("<li id='change-"+permission+'-'+e.removed.id+"'>"
                                    +_.__('permissions-changes.revoke-{{"{{ permission }}"}}-to-{{"{{ group }}"}}', {'permission': permissionLabel, 'group':e.removed.text})+"</li>");
                            }

                            var idsToUpdate = updateWhenRemove[e.target.id];
                            $(idsToUpdate).each(function(index, selectId) {
                                var toUpdate = $('#'+selectId);
                                if ($.inArray(e.removed.id, toUpdate.val()) > -1) {
                                    var propagateEvent = $.Event("change");
                                    propagateEvent.removed = e.removed;
                                    toUpdate.val($(toUpdate.val()).not([e.removed.id]).get()).trigger(propagateEvent);
                                }
                            });

                        }

                        if ($('#permissions-changes').children().size() > 0) {
                            $('#permissions-changes').parent().parent().children('label').show();
                        } else {
                            $('#permissions-changes').parent().parent().children('label').hide();
                        }
                    });
            });
        });
</script>
{% endif %}

<div class="tab-pane active" id="properties">
    {% set generalProperties %}
        {{ form_row(form.code) }}
    {% endset %}

    {% set nodeValues %}
        {{ form_row(form.label) }}
    {% endset %}

    {{ elements.accordion({ 'pane.accordion.general_properties': generalProperties, 'pane.accordion.node_values': nodeValues }) }}
</div>

{% if form.vars.value.id %}

    <div class="tab-pane" id="permissions">
        {{ elements.accordion({ 'pane.accordion.permissions': form_widget(form.permissions) }) }}
    </div>

    <div class="tab-pane" id="history">
        {% import 'PimDataGridBundle::macros.html.twig' as dataGrid %}
        {{ dataGrid.renderHistoryGrid(form.vars.value) }}
    </div>
{% endif %}
